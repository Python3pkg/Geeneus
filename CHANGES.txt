v0.1.0, 10/28/2012 -- Initial release with protein record support focus

v0.1.2, 10/28/2012 -- Update, addition of tests and some bug fixes. Will be "stable" alpha for a while (unless any other bugs crop up)

v0.1.3, 12/10/2012 -- Major overhaul. Added significant extra functionality to Proteome functions including the ability to get domains, get isoform sequences, taxonomy, species, gene name and other accession numbers. Additionally, added UniProt fall back, such that if an accession number is a UniProt or SwissProt accession and NCBI lookup fails, it now falls back to UniProt servers. This is all 100% transparent to the user, essentially providing an identical API to NCBI or Uniprot. Future versions will allow explicit access to one or both of these.

v0.1.4, 12/17/2012 -- Improved handling of isoform names, fixed bug in how mutation data is accessed, changed how isoforms are reported, meaning you now get both the isoform ID and the name

v0.1.5, 12/18/2012 -- Added in the ability to support "-" isoform accessions. Will still return the reference protein sequence and details, but at least doesn't reject them as badly formatted. Additionally improved the get_other_accessions() process. Previously, some of the version numbers were being truncated (e.g. Q12345.3 -> Q12345). Now no version number truncation takes place. Corrected tests to work with new isoform format. 

V0.1.6, 12/31/2012 -- One of the more major user facing changes, the 0.1.6 update changes a number of things which could break code. This is bad, but it seemed wise to nip these issues in the bud now before 0.2. These changes are detailed as follows;

- All returned dictionary keys now use all lower case. This was previously the case for "Domain" dictionaries, but for Variant dictionaries keys were things like, "Location" or "Mutant". Now all dictionaries use lower case words for consistency, both internally and with general Python standards

- Mutation types have changed. Up until 0.1.6 we only returned "Single" mutation types, but the approach for parsing these was flawed in a number of places, and ignored anything other than straight X->Y mutations. Mutations now support the full range of different mutation types and are one of several possible types. "Deletion" represent regions or amino acids which are missing, "Insertion" represent situations where the mutated version is longer than the original, and "Substitution" mutations occur when the original and mutant sequences are the same length. Within subititions we have "Substitution (single)", "Substitution (double)", or "Substitution (<X>)" where <X> is the length of the exhchange and is a value > 2

- Error or failed lookups now return None type instead of empty strings or empty lists. This removes any ambboguity, and in hindsite should have been clear from the start. 

- Exists vs. error. If both are false we can retrieve the XML, if error is true all methods return None
